# coding: utf-8

"""
    history basic

    var Beamable = BeamContext.Default; - That one line of code is a gateway to everything you need to build custom server logic via microservices along with a world of LiveOps tools and live services to build games that players love.

    The version of the OpenAPI document: 1.0
    Contact: support@beamable.com
    Created by: https://api.beamable.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from beamable_python_sdk import schemas  # noqa: F401


class SubscriberDetailsResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            customChannelPrefix = schemas.StrSchema
            playerForRealmChannel = schemas.StrSchema
            authenticationKey = schemas.StrSchema
            gameGlobalNotificationChannel = schemas.StrSchema
            gameNotificationChannel = schemas.StrSchema
            subscribeKey = schemas.StrSchema
            playerChannel = schemas.StrSchema
            __annotations__ = {
                "customChannelPrefix": customChannelPrefix,
                "playerForRealmChannel": playerForRealmChannel,
                "authenticationKey": authenticationKey,
                "gameGlobalNotificationChannel": gameGlobalNotificationChannel,
                "gameNotificationChannel": gameNotificationChannel,
                "subscribeKey": subscribeKey,
                "playerChannel": playerChannel,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customChannelPrefix"]) -> MetaOapg.properties.customChannelPrefix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["playerForRealmChannel"]) -> MetaOapg.properties.playerForRealmChannel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authenticationKey"]) -> MetaOapg.properties.authenticationKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gameGlobalNotificationChannel"]) -> MetaOapg.properties.gameGlobalNotificationChannel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gameNotificationChannel"]) -> MetaOapg.properties.gameNotificationChannel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subscribeKey"]) -> MetaOapg.properties.subscribeKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["playerChannel"]) -> MetaOapg.properties.playerChannel: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["customChannelPrefix", "playerForRealmChannel", "authenticationKey", "gameGlobalNotificationChannel", "gameNotificationChannel", "subscribeKey", "playerChannel", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customChannelPrefix"]) -> typing.Union[MetaOapg.properties.customChannelPrefix, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["playerForRealmChannel"]) -> typing.Union[MetaOapg.properties.playerForRealmChannel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authenticationKey"]) -> typing.Union[MetaOapg.properties.authenticationKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gameGlobalNotificationChannel"]) -> typing.Union[MetaOapg.properties.gameGlobalNotificationChannel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gameNotificationChannel"]) -> typing.Union[MetaOapg.properties.gameNotificationChannel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subscribeKey"]) -> typing.Union[MetaOapg.properties.subscribeKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["playerChannel"]) -> typing.Union[MetaOapg.properties.playerChannel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["customChannelPrefix", "playerForRealmChannel", "authenticationKey", "gameGlobalNotificationChannel", "gameNotificationChannel", "subscribeKey", "playerChannel", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        customChannelPrefix: typing.Union[MetaOapg.properties.customChannelPrefix, str, schemas.Unset] = schemas.unset,
        playerForRealmChannel: typing.Union[MetaOapg.properties.playerForRealmChannel, str, schemas.Unset] = schemas.unset,
        authenticationKey: typing.Union[MetaOapg.properties.authenticationKey, str, schemas.Unset] = schemas.unset,
        gameGlobalNotificationChannel: typing.Union[MetaOapg.properties.gameGlobalNotificationChannel, str, schemas.Unset] = schemas.unset,
        gameNotificationChannel: typing.Union[MetaOapg.properties.gameNotificationChannel, str, schemas.Unset] = schemas.unset,
        subscribeKey: typing.Union[MetaOapg.properties.subscribeKey, str, schemas.Unset] = schemas.unset,
        playerChannel: typing.Union[MetaOapg.properties.playerChannel, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SubscriberDetailsResponse':
        return super().__new__(
            cls,
            *args,
            customChannelPrefix=customChannelPrefix,
            playerForRealmChannel=playerForRealmChannel,
            authenticationKey=authenticationKey,
            gameGlobalNotificationChannel=gameGlobalNotificationChannel,
            gameNotificationChannel=gameNotificationChannel,
            subscribeKey=subscribeKey,
            playerChannel=playerChannel,
            _configuration=_configuration,
            **kwargs,
        )
